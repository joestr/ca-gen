# Generates Root CA
[ root-ca ]
dir              = ./root-ca
new_certs_dir    = $dir/newcerts
certs            = $dir/certs
crl_dir          = $dir/crl
unique_subject   = no
certificate      = $dir/root-ca.crt
database         = $dir/root-ca.index.txt
serial           = $dir/root-ca.serial.txt
private_key      = $dir/root-ca.pem
crl              = $dir/root-ca.crl
default_days     = 10950
default_md       = sha512
default_bits     = 8192
policy           = x-ca_policy
x509_extensions  = tls-ca_extensions
crlnumber        = $dir/root-ca.crlserial.txt
default_crl_days = 28
preserve         = no

# Generates OCSP signer cert for Root CA cert
[ root-ca_ocsp ]
dir              = ./root-ca
new_certs_dir    = $dir/newcerts
certs            = $dir/certs
crl_dir          = $dir/crl
unique_subject   = no
certificate      = $dir/root-ca.crt
database         = $dir/root-ca.index.txt
serial           = $dir/root-ca.serial.txt
private_key      = $dir/root-ca.pem
crl              = $dir/root-ca.crl
default_days     = 366
default_md       = sha512
default_bits     = 8192
policy           = root-ca_ocsp-policy
x509_extensions  = root-ca_ocsp-extensions
crlnumber        = $dir/root-ca.crlserial.txt
default_crl_days = 28
preserve         = no

# Generates intermediate TLS CA
[ tls-ca ]
dir              = ./root-ca
new_certs_dir    = $dir/newcerts
certs            = $dir/certs
crl_dir          = $dir/crl
unique_subject   = no
certificate      = $dir/root-ca.crt
database         = $dir/root-ca.index.txt
serial           = $dir/root-ca.serial.txt
private_key      = $dir/root-ca.pem
crl              = $dir/root-ca.crl
default_days     = 3660
default_md       = sha512
default_bits     = 8192
policy           = x-ca_policy
x509_extensions  = tls-ca_extensions
crlnumber        = $dir/root-ca.crlserial.txt
default_crl_days = 28
preserve         = no

# Generates intermediate Email CA
[ email-ca ]
dir              = ./root-ca
new_certs_dir    = $dir/newcerts
certs            = $dir/certs
crl_dir          = $dir/crl
unique_subject   = no
certificate      = $dir/root-ca.crt
database         = $dir/root-ca.index.txt
serial           = $dir/root-ca.serial.txt
private_key      = $dir/root-ca.pem
crl              = $dir/root-ca.crl
default_days     = 3660
default_md       = sha512
default_bits     = 8192
policy           = x-ca_policy
x509_extensions  = email-ca_extensions
crlnumber        = $dir/root-ca.crlserial.txt
default_crl_days = 28
preserve         = no

# Generates intermediate code-signing Signing CA
[ code-signing-ca ]
dir              = ./root-ca
new_certs_dir    = $dir/newcerts
certs            = $dir/certs
crl_dir          = $dir/crl
unique_subject   = no
certificate      = $dir/root-ca.crt
database         = $dir/root-ca.index.txt
serial           = $dir/root-ca.serial.txt
private_key      = $dir/root-ca.pem
crl              = $dir/root-ca.crl
default_days     = 3660
default_md       = sha512
default_bits     = 8192
policy           = x-ca_policy
x509_extensions  = code-signing_extensions
crlnumber        = $dir/root-ca.crlnumber.txt
default_crl_days = 28
preserve         = no

# Generates subscriber TLS certs
[ tls ]
dir              = /tls-ca
new_certs_dir    = $dir/newcerts
certs            = $dir/certs
crl_dir          = $dir/crl
unique_subject   = no
certificate      = $dir/tls-ca.crt
database         = $dir/tls-ca.index.txt
private_key      = $dir/tls-ca.pem
serial           = $dir/tls-ca.serial.txt
crl              = $dir/tls-ca.crl
default_days     = 365
default_md       = sha512
default_bits     = 8192
policy           = tls_policy
x509_extensions  = tls_extensions
crlnumber        = $dir/tls-ca.crlserial.txt
default_crl_days = 28
preserve         = no

# Generates subscriber email certs
[ email ]
dir              = /email-ca
new_certs_dir    = $dir/newcerts
certs            = $dir/certs
crl_dir          = $dir/crl
unique_subject   = no
certificate      = $dir/email-ca.crt
database         = $dir/email-ca.index.txt
private_key      = $dir/email-ca.pem
serial           = $dir/email-ca.serial.txt
crl              = $dir/email-ca.crl
default_days     = 365
default_md       = sha512
default_bits     = 8192
policy           = email_policy
x509_extensions  = email_extensions
crlnumber        = $dir/email-ca.crlserial.txt
default_crl_days = 28
preserve         = no

# Generates subscriber code signing certs
[ code-signing ]
dir              = /code-signing-ca
new_certs_dir    = $dir/newcerts
certs            = $dir/certs
crl_dir          = $dir/crl
unique_subject   = no
certificate      = $dir/code-signing-ca.crt
database         = $dir/code-signing-ca.index.txt
private_key      = $dir/code-signing-ca.pem
serial           = $dir/code-signing-ca.serial.txt
crl              = $dir/code-signing-ca.crl
default_days     = 365
default_md       = sha512
default_bits     = 8192
policy           = code-signing_policy
x509_extensions  = code-signing_extensions
crlnumber        = $dir/code-signing-ca.crlserial.txt
default_crl_days = 28
preserve         = no

# Policy for intermediate CAs
[ x-ca_policy ]
commonName             = supplied
stateOrProvinceName    = supplied
localityName           = supplied
countryName            = supplied
emailAddress           = supplied
organizationName       = optional
organizationalUnitName = optional

# Policy for subscriber TLS certs
[ tls_policy ]
commonName             = supplied
stateOrProvinceName    = optional
localityName           = optional
countryName            = supplied
emailAddress           = optional
organizationName       = optional
organizationalUnitName = optional

# Policy for subscriber email certs
[ email_policy ]
commonName             = optional
stateOrProvinceName    = optional
localityName           = optional
countryName            = supplied
emailAddress           = supplied
organizationName       = optional
organizationalUnitName = optional

# Policy for subscriber code signing certs
[ code-signing_policy ]
commonName             = supplied
stateOrProvinceName    = optional
localityName           = optional
countryName            = supplied
emailAddress           = optional
organizationName       = optional
organizationalUnitName = optional

# Policy for subscriber TLS certs
[ root-ca_ocsp-policy ]
commonName             = supplied
stateOrProvinceName    = supplied
localityName           = supplied
countryName            = supplied
emailAddress           = supplied
organizationName       = optional
organizationalUnitName = optional

# Extensions for TLS CA
[ tls-ca_extensions ]
basicConstraints       = critical, CA:TRUE
subjectKeyIdentifier   = hash
authorityKeyIdentifier = keyid:always, issuer
keyUsage               = digitalSignature, keyEncipherment, cRLSign, keyCertSign
extendedKeyUsage       = serverAuth, clientAuth, OCSPSigning
crlDistributionPoints  = URI:http://example.com/repository/root-ca.crl
authorityInfoAccess    = OCSP;URI:http://example.com/ocsp/root-ca, caIssuers;URI:http://example.com/repository/root-ca.crt

# Extensions for Email CA
[ email-ca_extensions ]
basicConstraints       = critical, CA:TRUE
subjectKeyIdentifier   = hash
authorityKeyIdentifier = keyid:always, issuer
keyUsage               = digitalSignature, keyEncipherment, cRLSign, keyCertSign
extendedKeyUsage       = emailProtection, OCSPSigning
crlDistributionPoints  = URI:http://joestr.priv.at/repository/root-ca.crl
authorityInfoAccess    = OCSP;URI:http://example.com/ocsp/root-ca, caIssuers;URI:http://example.com/repository/root-ca.crt

# Extensions for Code Signing CA
[ code-signing-ca_extensions ]
basicConstraints       = critical, CA:TRUE
subjectKeyIdentifier   = hash
authorityKeyIdentifier = keyid:always, issuer
keyUsage               = digitalSignature, keyEncipherment, cRLSign, keyCertSign
extendedKeyUsage       = codeSigning, OCSPSigning
crlDistributionPoints  = URI:http://example.com/repository/root-ca.crl
authorityInfoAccess    = OCSP;URI:http://example.com/ocsp/root-ca, caIssuers;URI:http://example.com/repository/root-ca.crt

# Extensions for subscriber TLS certs
[ tls_extensions ]
basicConstraints       = critical, CA:FALSE
subjectKeyIdentifier   = hash
authorityKeyIdentifier = keyid:always, issuer
keyUsage               = digitalSignature, keyEncipherment
extendedKeyUsage       = serverAuth, clientAuth
crlDistributionPoints  = URI:http://example.com/repository/tls-ca.crl
authorityInfoAccess    = OCSP;URI:http://example.com/ocsp/tls-ca, caIssuers;URI:http://example.com/repository/tls-ca.crt
subjectAltName         = @__subjectAltName__

# Extensions for subscriber email certs
[ email_extensions ]
basicConstraints       = critical, CA:FALSE
subjectKeyIdentifier   = hash
authorityKeyIdentifier = keyid:always, issuer
keyUsage               = digitalSignature, keyEncipherment
extendedKeyUsage       = emailProtection
crlDistributionPoints  = URI:http://example.com/repository/email-ca.crl
authorityInfoAccess    = OCSP;URI:http://example.com/ocsp/email-ca, caIssuers;URI:http://example.com/repository/email-ca.crt

# Extensions for subscriber code signing certs
[ code-signing_extensions ]
basicConstraints       = critical, CA:FALSE
subjectKeyIdentifier   = hash
authorityKeyIdentifier = keyid:always, issuer
keyUsage               = digitalSignature, keyEncipherment
extendedKeyUsage       = code-signingSigning
crlDistributionPoints  = URI:http://example.com/repository/code-signing-ca.crl
authorityInfoAccess    = OCSP;URI:http://example.com/ocsp/code-signing-ca, caIssuers;URI:http://example.com/repository/code-signing-ca.crt

#
# OCSP extensions
#
[ root-ca_ocsp-extensions ]
basicConstraints       = critical, CA:FALSE
subjectKeyIdentifier   = hash
authorityKeyIdentifier = keyid:always, issuer
keyUsage               = digitalSignature, keyEncipherment
extendedKeyUsage       = OCSPSigning
crlDistributionPoints  = URI:http://example.com/repository/root-ca.crl
authorityInfoAccess    = OCSP;URI:http://example.com/ocsp/root-ca, caIssuers;URI:http://example.com/repository/root-ca.crt

[ tls-ca_ocsp-extensions ]
basicConstraints       = critical, CA:FALSE
subjectKeyIdentifier   = hash
authorityKeyIdentifier = keyid:always, issuer
keyUsage               = digitalSignature, keyEncipherment
extendedKeyUsage       = OCSPSigning
crlDistributionPoints  = URI:http://example.com/repository/tls-ca.crl
authorityInfoAccess    = OCSP;URI:http://example.com/ocsp/tls-ca, caIssuers;URI:http://example.com/repository/tls-ca.crt

[ email-ca_ocsp-extensions ]
basicConstraints       = critical, CA:FALSE
subjectKeyIdentifier   = hash
authorityKeyIdentifier = keyid:always, issuer
keyUsage               = digitalSignature, keyEncipherment
extendedKeyUsage       = OCSPSigning
crlDistributionPoints  = URI:http://example.com/repository/email-ca.crl
authorityInfoAccess    = OCSP;URI:http://example.com/ocsp/email-ca, caIssuers;URI:http://example.com/repository/email-ca.crt

[ code-signing-ca_ocsp-extensions ]
basicConstraints       = critical, CA:FALSE
subjectKeyIdentifier   = hash
authorityKeyIdentifier = keyid:always, issuer
keyUsage               = digitalSignature, keyEncipherment
extendedKeyUsage       = OCSPSigning
crlDistributionPoints  = URI:http://example.com/repository/code-signing-ca.crl
authorityInfoAccess    = OCSP;URI:http://example.com/ocsp/code-signing-ca, caIssuers;URI:http://example.com/repository/code-signing-ca.crt

#
# Extensions for Root CA
#
[ v3_ca ]
basicConstraints       = critical, CA:TRUE
subjectKeyIdentifier   = hash
authorityKeyIdentifier = keyid:always, issuer
keyUsage               = digitalSignature, keyEncipherment, cRLSign, keyCertSign
extendedKeyUsage       = serverAuth, clientAuth, emailProtection, codeSigning, OCSPSigning

#
# Generic CRL extensions
#
[ crl_ext ]
basicConstraints       = critical, CA:FALSE
subjectKeyIdentifier   = hash
authorityKeyIdentifier = keyid:always, issuer

#
# Request section
#
[ req ]
distinguished_name = request

[ request ]
countryName            = Country code-signing
countryName_min        = 2
countryName_max        = 2
stateOrProvinceName    = State or province
localityName           = City
0.organizationName     = Organization
organizationalUnitName = Organizational unit
commonName             = Common name
commonName_min         = 1
commonName_max         = 64
emailAddress           = Email
emailAddress_min       = 1
emailAddress_max       = 64

[ __subjectAltName__ ]
DNS = 